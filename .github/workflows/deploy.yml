name: Deploy NestJS to DigitalOcean

on:
  push:
    branches: [main]

env:
  REGISTRY: registry.digitalocean.com
  IMAGE_NAME: registry.digitalocean.com/magic-person/nest_first_try # DOCR仓库路径
  APP_NAME: nest-first-try      # 应用名称

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1. 设置 Node.js 环境
      - uses: actions/setup-node@v3
        with:
          node-version: '18'         # 明确指定 Node.js 版本
          cache: 'npm'

      # 2. 安装依赖并构建
      - run: npm ci
      - run: npm run build    # 确保你的 package.json 有 build 脚本

      # 3. 登录 DOCR
      - name: Login to DOCR
        run: |
          echo "${{ secrets.DOCR_TOKEN }}" | docker login \
          ${{ env.REGISTRY }} \
          -u ${{ secrets.DOCR_USERNAME }} \
          --password-stdin

      # 4. 构建 Docker 镜像
      - name: Build and tag image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # 5. 推送镜像
      - name: Push image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # 6. SSH 部署到服务器
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DO_SERVER_HOST }}
          username: ${{ secrets.DO_SERVER_USERNAME }}
          key: ${{ secrets.DO_SERVER_SSH_KEY }}
          script: |
            # 拉取最新镜像并重新运行容器
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            docker stop ${{ env.APP_NAME }} || true
            docker rm ${{ env.APP_NAME }} || true
            docker run -d \
              --name ${{ env.APP_NAME }} \
              --restart always \
              -p 3000:3000 \              # 根据你的 NestJS 端口调整
              -e NODE_ENV=production \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest