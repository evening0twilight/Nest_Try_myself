name: Build, Push, and Deploy

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 登录 DigitalOcean 容器注册表 (DOCR)
      - name: Login to DOCR
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DOCR_USERNAME }}
          password: ${{ secrets.DOCR_TOKEN }}

      # 3. 构建 Docker 镜像并打标签
      - name: Build and Tag
        run: |
          docker build -t registry.digitalocean.com/your-namespace/your-repo:latest .
          docker tag registry.digitalocean.com/your-namespace/your-repo:latest registry.digitalocean.com/your-namespace/your-repo:${{ github.sha }}

      # 4. 推送镜像到 DOCR
      - name: Push to DOCR
        run: |
          docker push registry.digitalocean.com/your-namespace/your-repo:latest
          docker push registry.digitalocean.com/your-namespace/your-repo:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码（可选，用于执行部署脚本）
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 配置 SSH 密钥连接到服务器
      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DO_SERVER_SSH_KEY }}

      # 3. 通过 SSH 在服务器上拉取镜像并重启容器
      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DO_SERVER_USERNAME }}@${{ secrets.DO_SERVER_HOST }} "
            # 登录 DOCR
            echo ${{ secrets.DOCR_TOKEN }} | docker login registry.digitalocean.com -u ${{ secrets.DOCR_USERNAME }} --password-stdin

            # 拉取最新镜像
            docker pull registry.digitalocean.com/your-namespace/your-repo:latest

            # 重启容器（假设使用 docker-compose）
            cd /path/to/your/project
            docker-compose down
            docker-compose up -d
          "